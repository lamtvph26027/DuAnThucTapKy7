// <auto-generated />
using System;
using App_data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App_data.Migrations
{
    [DbContext(typeof(AppDbcontext))]
    [Migration("20231102143834_c")]
    partial class c
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("App_data.Models.Anh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietSanPhamId");

                    b.ToTable("Anh", (string)null);
                });

            modelBuilder.Entity("App_data.Models.ChatLieu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChatLieu", (string)null);
                });

            modelBuilder.Entity("App_data.Models.ChiTietGioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DonGia")
                        .HasColumnType("int");

                    b.Property<Guid>("IdChiTietSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdChiTietSP");

                    b.HasIndex("IdNguoiDung");

                    b.ToTable("ChiTietGioHang", (string)null);
                });

            modelBuilder.Entity("App_data.Models.ChiTietHoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DonGia")
                        .HasColumnType("int");

                    b.Property<Guid>("IdChiTiepSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdChiTiepSP");

                    b.HasIndex("IdHoaDon");

                    b.ToTable("ChiTietHoaDon", (string)null);
                });

            modelBuilder.Entity("App_data.Models.ChiTietPhuongThucThanhToan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPTTT")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoTien")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdPTTT");

                    b.ToTable("ChiTietPTTT", (string)null);
                });

            modelBuilder.Entity("App_data.Models.ChiTietSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DonGia")
                        .HasColumnType("int");

                    b.Property<Guid>("IdAnh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdKhuyenMai")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdLoaiSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMauSac")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNhaCungCap")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<int>("soluong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAnh");

                    b.HasIndex("IdKhuyenMai");

                    b.HasIndex("IdLoaiSP");

                    b.HasIndex("IdMauSac");

                    b.HasIndex("IdNhaCungCap");

                    b.HasIndex("IdSanPham");

                    b.HasIndex("IdSize");

                    b.ToTable("ChiTietSanPham", (string)null);
                });

            modelBuilder.Entity("App_data.Models.DanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BinhLuan")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("IdChiTietSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sao")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdChiTietSP");

                    b.HasIndex("IdNguoiDung");

                    b.ToTable("DanhGia", (string)null);
                });

            modelBuilder.Entity("App_data.Models.GioHang", b =>
                {
                    b.Property<Guid>("IdNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime");

                    b.HasKey("IdNguoiDung");

                    b.ToTable("GioHang", (string)null);
                });

            modelBuilder.Entity("App_data.Models.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("IdNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTrangThaiGiaoHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgayThanhToan")
                        .HasColumnType("datetime");

                    b.Property<string>("PhuongThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenNguoiNhan")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TienKhachDua")
                        .HasColumnType("int");

                    b.Property<int>("TienShip")
                        .HasColumnType("int");

                    b.Property<long>("TienThua")
                        .HasColumnType("bigint");

                    b.Property<long>("TongTien")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdTrangThaiGiaoHang");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("App_data.Models.KhuyenMai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GiaTri")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayApDung")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("KhuyenMai", (string)null);
                });

            modelBuilder.Entity("App_data.Models.LoaiSP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdChatLieu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdLoaiSPCha")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdChatLieu");

                    b.HasIndex("IdLoaiSPCha");

                    b.ToTable("LoaiSP", (string)null);
                });

            modelBuilder.Entity("App_data.Models.MauSac", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhMauSac")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietSanPhamId");

                    b.ToTable("MauSac", (string)null);
                });

            modelBuilder.Entity("App_data.Models.NhaCungCap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NhaCungCap", (string)null);
                });

            modelBuilder.Entity("App_data.Models.PhuongThucThanhToan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PhuongThucThanhToan", (string)null);
                });

            modelBuilder.Entity("App_data.Models.SanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("App_data.Models.Size", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietSanPhamId");

                    b.ToTable("Size", (string)null);
                });

            modelBuilder.Entity("App_data.Models.TaiKhoan", b =>
                {
                    b.Property<Guid>("IdNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("Ho")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("IdVaiTro")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenDem")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdNguoiDung");

                    b.HasIndex("IdVaiTro");

                    b.ToTable("TaiKhoan", (string)null);
                });

            modelBuilder.Entity("App_data.Models.TrangThaiHoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrangThaiHoaDon", (string)null);
                });

            modelBuilder.Entity("App_data.Models.VaiTro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VaiTro", (string)null);
                });

            modelBuilder.Entity("App_data.Models.Anh", b =>
                {
                    b.HasOne("App_data.Models.ChiTietSanPham", null)
                        .WithMany("listAnhs")
                        .HasForeignKey("ChiTietSanPhamId");
                });

            modelBuilder.Entity("App_data.Models.ChiTietGioHang", b =>
                {
                    b.HasOne("App_data.Models.ChiTietSanPham", "ChiTietSanPhams")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("IdChiTietSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_data.Models.GioHang", "GioHang")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("IdNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPhams");

                    b.Navigation("GioHang");
                });

            modelBuilder.Entity("App_data.Models.ChiTietHoaDon", b =>
                {
                    b.HasOne("App_data.Models.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("IdChiTiepSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_data.Models.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("App_data.Models.ChiTietPhuongThucThanhToan", b =>
                {
                    b.HasOne("App_data.Models.HoaDon", "HoaDons")
                        .WithMany("ChiTietPTTTs")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_data.Models.PhuongThucThanhToan", "PhuongThucThanhToans")
                        .WithMany("ChiTietPTTTs")
                        .HasForeignKey("IdPTTT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDons");

                    b.Navigation("PhuongThucThanhToans");
                });

            modelBuilder.Entity("App_data.Models.ChiTietSanPham", b =>
                {
                    b.HasOne("App_data.Models.Anh", "Anhs")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("IdAnh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_data.Models.KhuyenMai", "KhuyenMais")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("IdKhuyenMai");

                    b.HasOne("App_data.Models.LoaiSP", "LoaiSPs")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("IdLoaiSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_data.Models.MauSac", "MauSacs")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("IdMauSac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_data.Models.NhaCungCap", "NhaCungCaps")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("IdNhaCungCap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_data.Models.SanPham", "SanPhams")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("IdSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_data.Models.Size", "Sizes")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("IdSize")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anhs");

                    b.Navigation("KhuyenMais");

                    b.Navigation("LoaiSPs");

                    b.Navigation("MauSacs");

                    b.Navigation("NhaCungCaps");

                    b.Navigation("SanPhams");

                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("App_data.Models.DanhGia", b =>
                {
                    b.HasOne("App_data.Models.ChiTietSanPham", "ChiTietSanPhams")
                        .WithMany("DanhGias")
                        .HasForeignKey("IdChiTietSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_data.Models.TaiKhoan", "TaiKhoans")
                        .WithMany("DanhGias")
                        .HasForeignKey("IdNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPhams");

                    b.Navigation("TaiKhoans");
                });

            modelBuilder.Entity("App_data.Models.GioHang", b =>
                {
                    b.HasOne("App_data.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("GioHang")
                        .HasForeignKey("App_data.Models.GioHang", "IdNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("App_data.Models.HoaDon", b =>
                {
                    b.HasOne("App_data.Models.TaiKhoan", "TaiKhoans")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdNguoiDung");

                    b.HasOne("App_data.Models.TrangThaiHoaDon", "Trangthais")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdTrangThaiGiaoHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoans");

                    b.Navigation("Trangthais");
                });

            modelBuilder.Entity("App_data.Models.LoaiSP", b =>
                {
                    b.HasOne("App_data.Models.ChatLieu", "ChatLieus")
                        .WithMany("LoaiSPs")
                        .HasForeignKey("IdChatLieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_data.Models.LoaiSP", "LoaiSPChas")
                        .WithMany()
                        .HasForeignKey("IdLoaiSPCha");

                    b.Navigation("ChatLieus");

                    b.Navigation("LoaiSPChas");
                });

            modelBuilder.Entity("App_data.Models.MauSac", b =>
                {
                    b.HasOne("App_data.Models.ChiTietSanPham", null)
                        .WithMany("listMauSacs")
                        .HasForeignKey("ChiTietSanPhamId");
                });

            modelBuilder.Entity("App_data.Models.Size", b =>
                {
                    b.HasOne("App_data.Models.ChiTietSanPham", null)
                        .WithMany("listSizes")
                        .HasForeignKey("ChiTietSanPhamId");
                });

            modelBuilder.Entity("App_data.Models.TaiKhoan", b =>
                {
                    b.HasOne("App_data.Models.VaiTro", "VaiTros")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("IdVaiTro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VaiTros");
                });

            modelBuilder.Entity("App_data.Models.Anh", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("App_data.Models.ChatLieu", b =>
                {
                    b.Navigation("LoaiSPs");
                });

            modelBuilder.Entity("App_data.Models.ChiTietSanPham", b =>
                {
                    b.Navigation("ChiTietGioHangs");

                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("DanhGias");

                    b.Navigation("listAnhs");

                    b.Navigation("listMauSacs");

                    b.Navigation("listSizes");
                });

            modelBuilder.Entity("App_data.Models.GioHang", b =>
                {
                    b.Navigation("ChiTietGioHangs");
                });

            modelBuilder.Entity("App_data.Models.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("ChiTietPTTTs");
                });

            modelBuilder.Entity("App_data.Models.KhuyenMai", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("App_data.Models.LoaiSP", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("App_data.Models.MauSac", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("App_data.Models.NhaCungCap", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("App_data.Models.PhuongThucThanhToan", b =>
                {
                    b.Navigation("ChiTietPTTTs");
                });

            modelBuilder.Entity("App_data.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("App_data.Models.Size", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("App_data.Models.TaiKhoan", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("GioHang");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("App_data.Models.TrangThaiHoaDon", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("App_data.Models.VaiTro", b =>
                {
                    b.Navigation("TaiKhoans");
                });
#pragma warning restore 612, 618
        }
    }
}
